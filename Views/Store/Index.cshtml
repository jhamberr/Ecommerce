@model StoreSearchModel
@{
}

<h2 class="pb-4 text-center">Products</h2>


<form class="row g-3 mb-3">
    <div class="col-lg-2 col-md-4">
        <!--brand is the name of the parameter that you will send to the server. upon changing value, submit the form-->
        <!--Bind the different properties of the model to the form with the asp-for helper tag-->
        <select class="form-select" name="brand" asp-for="Brand" onchange="this.form.submit()">
            <option value="">All Brands</option> <!--Different values that can be submitted to the server-->
            <option value ="Samsung">Samsung</option>
            <option value="Apple">Apple</option>
            <option value="Nokia">Nokia</option>
            <option value="HP">HP</option>
        </select>
    </div>
    <div class="col-lg-2 col-md-4">
        <select class="form-select" name="category" asp-for="Category" onchange="this.form.submit()">
            <option value="">All Categories</option>
            <option value="Phones">Phones</option>
            <option value="Computers">Computers</option>
            <option value="Accessories">Accessories</option>
            <option value="Printers">Printers</option>
            <option value="Cameras">Cameras</option>
            <option value="Other">Other</option>
        </select>
    </div>
    <div class="col-lg-2 col-md-4">
        <!--Bind the different properties of the model to the form with the asp-for helper tag-->
        <select class="form-select" name="sort" asp-for="Sort" onchange="this.form.submit()">
            <option value="newest">Order Be Newest</option>
            <option value="price_asc">Price: Low to High</option>
            <option value="price_desc">Price: High to Low</option>
        </select>
    </div>
    <div class="col-lg-6 col-md-12 d-flex">
        <input class="form-control me-2" name="search" asp-for="Search" placeholder="Search by Name" />
        <button class="btn btn-outline-success" type="submit">Search</button>
    </div>
</form>




<div class="row mb-5 g-3">
    @foreach (var product in ViewBag.Products)
    {
        <div class="col-lg-3 col-md-6">
            <div class="rounded border shadow p-3 text-center h-100">
                <img src="/products/@product.ImageFileName" class="img-fluid" alt="..."
                     style="height: 180px; object-fit: contain" />
                <hr />
                <h5 class="py-2">@product.Name</h5>
                <p>
                    Brand: @product.Brand, Category: @product.Category
                </p>
                <h4 class="mb-3">$@(product.Price)</h4>
                <a class="btn btn-primary btn-sm mb-2" asp-controller="Store"
                   asp-action="Details" asp-route-id="@product.Id" role="button">Details</a>
                <button type="button" class="btn btn-warning btn-sm mb-2" onclick="addToCart(this, @product.Id)">
                    Add to Cart <i class="bi bi-cart4"></i>
                </button>
            </div>
        </div>
    }
</div>


<nav >
    <ul class="pagination">
        @for(int i = 1; i<= ViewBag.TotalPages; i++)
        {
            string active = "";
            if (i == ViewBag.PageIndex) active = "active"; /* if i == page passed in then active = 
            active bootstrap class, how is it passed in,  so all page buttons are
            displayed initially and the special one is highlighted? when you click a button it sends to the view 
            and that starts the process of the page being rendered with products etc?button sent to view 
            via this code then page is displayed this code simply sends page number and 
            highllights current page. the view code and other cshtml code handle the page being displayed?*/
            //asp route vs asp for?
            <li class="page-item @active"><a class="page-link" asp-route-pageIndex="@i"
            asp-route-search="@Model.Search" asp-route-brand="@Model.Brand"
            asp-route-category="@Model.Category" asp-route-sort="@Model.Sort">@i</a></li>
        }

    </ul>
</nav>