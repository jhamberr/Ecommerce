
@{
}
<!--Showing how to create form without making a DTO since there is only 1 field
    make div with width 400 picels and displayed in center
-->
<div class="mx-auto rounded border p-4" style="width: 400px">
    <h2 class="text-center mb-3">Forgot password</h2>
    <hr />

    @if (ViewBag.SuccessMessage != null)
    {
        <div class='alert alert-success alert-dismissible fade show' role='alert'>
            <strong>@ViewBag.SuccessMessage</strong>
            <button type='button' class='btn-close' data-bs-dismiss='alert' aria-label='Close'></button>
        </div>
        
    }
    <form method="post">
        <div class="mb-3">
            <label class="form-label">Email</label>
            <!--input field is not bound to any property from a DTO. instead we are using html attributes 
            which are the name(of the parameter that will be submitted to the server) attribute
            and the value(will be the value that we display in the input field). pass in viewbag value 
            to cshtml file from action in controller and it will display in input field||name value will be passed from view/page/cshtml to controller, viewbag shows curr value if there is one for email should not be null-->
            <input class="form-control" name="email" value="@ViewBag.Email" />
            <!--same concept for input. we display any validation errors that we will save in viewbag from the action method-->
            <span class="text-danger">@ViewBag.EmailError</span>
        </div>

        <!--Make a row with 2 buttons-->
        <div class="row mb-3">
            <div class="col d-grid">
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>

            <div class="col d-grid">
                <a class="btn btn-outline-primary" asp-controller="Account" asp-action="Login" role="button">
                    Login
                </a>
            </div>
        </div>
    </form>
</div>